{"version":3,"sources":["me.png","roboSS.png","NavBar.js","About.js","Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","href","target","activeClass","to","spy","smooth","offset","duration","About","src","require","alt","Projects","id","App","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6LAAAA,EAAOC,QAAU,IAA0B,gC,wCCA3CD,EAAOC,QAAU,IAA0B,oC,gKCyB5BC,EArBA,WACX,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,WACX,4BACI,uBAAGC,KAAK,gCAAgCC,OAAO,UAAS,wBAAIF,UAAU,OAAd,WACxD,kBAAC,OAAD,CACIG,YAAY,SACZC,GAAG,kBACHC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KACb,wBAAIR,UAAU,QAAd,iBCSNS,G,MAvBD,WAEV,OACI,yBAAKT,UAAU,SAEX,yBAAKA,UAAU,SACf,yBAAKA,UAAU,UACP,uDAEJ,yBAAKA,UAAU,MACX,yBAAKU,IAAKC,EAAQ,IAAaC,IAAI,aAK3C,yBAAKZ,UAAU,aACX,wKAA6I,6BAAK,6BAAlJ,+ICqEDa,G,MArFE,WACb,OACI,yBAAKb,UAAU,WAAWc,GAAG,mBACzB,yBAAKd,UAAU,YACX,yCAGJ,yBAAKA,UAAU,WACX,yBAAKA,UAAU,QACX,kDACA,yJACwG,6BADxG,qGAC2M,6BAD3M,oFAEA,6BAAM,6BACF,uBAAGC,KAAK,qJAAqJC,OAAO,UAAS,yBAAKF,UAAU,SAASY,IAAI,wBAAwBF,IAAI,+FAI7O,yBAAKV,UAAU,eACX,yBAAKA,UAAU,QACX,yBAAKU,IAAI,sHAAsHE,IAAI,SAGvI,yBAAKZ,UAAU,QACX,yBAAKU,IAAI,uHAAuHE,IAAI,SAGxI,yBAAKZ,UAAU,QACX,yBAAKU,IAAI,wHAAwHE,IAAI,WAOjJ,6BAAM,6BAAM,6BAEZ,yBAAKZ,UAAU,WACX,yBAAKA,UAAU,QACX,2CACA,4DAAiC,6BAAjC,qCACsC,uBAAGC,KAAK,8CAAR,QADtC,4DAC4J,6BAD5J,0IAEiF,6BAAK,6BAClF,uBAAGA,KAAK,0CAA0CC,OAAO,UAAzD,yBAIR,yBAAKF,UAAU,eAEX,yBAAKA,UAAU,QACX,yBAAKU,IAAKC,EAAQ,IAAiBC,IAAI,WAOnD,6BAAM,6BAAM,6BAEZ,yBAAKZ,UAAU,WACX,yBAAKA,UAAU,QACX,+CACA,iFAAsD,6BAAM,6BAAK,6BAAjE,mBACgB,6BAAK,6BADrB,qEAGA,6BAAK,uBAAGC,KAAK,yDAAyDC,OAAO,UAAxE,0DAA2I,6BAAK,6BAAK,6BAH1J,uBAIoB,6BAAK,6BAJzB,wFAMA,6BAAK,uBAAGD,KAAK,sDAAsDC,OAAO,UAArE,uDAAqI,6BAAK,6BAAK,6BANpJ,YAOS,6BAAK,6BAPd,6DASA,6BAAK,uBAAGD,KAAK,kDAAkDC,OAAO,UAAjE,sDAOjB,gCC9DOa,G,uLAVP,OACI,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANMC,IAAMC,YCMJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ed902e8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.cac91df5.png\";","module.exports = __webpack_public_path__ + \"static/media/roboSS.9d033328.png\";","import React from 'react';\r\nimport './NavBar.css'\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className='navbar'>\r\n            <div className='buttons'>\r\n                <ul>\r\n                    <a href=\"https://github.com/atahanszgn\" target=\"_blank\"><li className=\"git\">GitHub</li></a>\r\n                    <Link\r\n                        activeClass=\"active\"\r\n                        to=\"projectsSection\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-70}\r\n                        duration={500}\r\n                    ><li className=\"prjs\">Projects</li></Link>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n    \r\n    return (\r\n        <div className=\"about\">\r\n\r\n            <div className=\"intro\">\r\n            <div className=\"myName\">\r\n                    <h1>Hi! I'm Atahan Sezgin.</h1>\r\n                </div>\r\n                <div className=\"pp\">\r\n                    <img src={require('./me.png')} alt=\"atahan\"></img>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"aboutText\">\r\n                <p>3rd year Computer Engineering student who is interested in Game Development and Design, Web Development and Mobile App Development areas. <br/><br/>Has a good knowledge of Object-Oriented Programming, experienced in solving bugs, handling difficult situations and working with teams.</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './Projects.css';\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <div className=\"projects\" id=\"projectsSection\">\r\n            <div className=\"pSection\">\r\n                <h1>Projects</h1>\r\n            </div>\r\n\r\n            <div className=\"project\">\r\n                <div className=\"desc\">\r\n                    <h1>Dodgeball Madness!</h1>\r\n                    <p>Dodgeball Madness!\r\n                    My first android game made with Unity and C# programming language. I used Inkscape for Vector graphics, <br />GIMP for editing the images, GameMaker-Studioâ€™s sprite editor for exporting animation sheets,<br /> LMMS for making the music, Audacity for editing sounds and Google AdMob for ads.\r\n                    <br /><br />\r\n                        <a href='https://play.google.com/store/apps/details?id=com.atahanszgn.dbmadness&pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1' target='_blank'><img className=\"gpLogo\" alt='Get it on Google Play' src='https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png' /></a>\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"screenshots\">\r\n                    <div className=\"dbss\">\r\n                        <img src='https://lh3.googleusercontent.com/AsrO3rUP-4jFOjxVXBiI81hQoaGRtC_2RR2kNjWUqGLIaDdQVaUJewTpi31v3G6gIA=w2560-h1122-rw' alt=\"ss1\"></img>\r\n                    </div>\r\n\r\n                    <div className=\"dbss\">\r\n                        <img src='https://lh3.googleusercontent.com/uzZQMLpSemv1nBHKztb6LwffzUSGeBN7wwDxNyVtUv3F1pJslftmkn0pBVJQMOVAiaw=w2560-h1122-rw' alt=\"ss2\"></img>\r\n                    </div>\r\n\r\n                    <div className=\"dbss\">\r\n                        <img src='https://lh3.googleusercontent.com/1GS0539mDNhJSXg5znxMjM075nKmj8kp1j3_jWvoJeC77ujL5PpmaZWgBx8qUqAJ11Cw=w2560-h1122-rw' alt=\"ss3\"></img>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <br /><br /><br />\r\n\r\n            <div className=\"project\">\r\n                <div className=\"desc\">\r\n                    <h1>Robofriends</h1>\r\n                    <p>It's my first app using React!<br />\r\n                        Fetches information of users from <a href=\"https://jsonplaceholder.typicode.com/users\">here</a>, creates cards with that information and displays them. <br />Filters cards by name with using the given input by user.\r\n                        Also search box is static. So you can scroll down and still filter the cards!<br/><br/>\r\n                        <a href=\"http://atahanszgn.github.io/robofriends\" target=\"_blank\">Click here to test!</a>\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"screenshots\">\r\n\r\n                    <div className=\"rfss\">\r\n                        <img src={require('./roboSS.png')} alt=\"ss2\"></img>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <br /><br /><br />\r\n\r\n            <div className=\"project\">\r\n                <div className=\"desc\">\r\n                    <h1>School Projects</h1>\r\n                    <p>There are other projects of mine on my GitHub page.<br /><br/><br/>\r\n                    Chat Application<br/><br/>\r\n                    A peer-to-peer chat system written in Python programming language.\r\n                    <br/><a href=\"https://github.com/atahanszgn/CMP2204-Chat-Application\" target=\"_blank\">https://github.com/atahanszgn/CMP2204-Chat-Application</a><br/><br/><br/>\r\n                    Frequent Word Finder<br/><br/>\r\n                    Prints the top 10 frequent words from a csv file.Written in C++ programming language.\r\n                    <br/><a href=\"https://github.com/atahanszgn/CMP2003-frequentWords\" target=\"_blank\">https://github.com/atahanszgn/CMP2003-frequentWords</a><br/><br/><br/>\r\n                    Maze Game<br/><br/>\r\n                    A command prompt game written in C++ programming language.\r\n                    <br/><a href=\"https://github.com/atahanszgn/CMP1001-Maze-Game\" target=\"_blank\">https://github.com/atahanszgn/CMP1001-Maze-Game</a>\r\n                    </p>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        <br/>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport NavBar from './NavBar';\r\nimport About from './About';\r\nimport Projects from './Projects';\r\nimport './App.css';\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n            <NavBar/>\r\n            <About/>\r\n            <Projects/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}